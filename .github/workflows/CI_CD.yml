name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  Deploy:
    runs-on: ubuntu-latest

    env:
       PRIVATE_KEY : ${{ secrets.AWS_PRIVATE_KEY  }}
       HOSTNAME : ${{ secrets.HOSTNAME  }}
       HOSTNAME_2 : ${{ secrets.HOSTNAME_2 }}
       BASTION_HOSTNAME : ${{ secrets.BASTION_HOSTNAME  }}
       USER_NAME : ${{ secrets.USER_NAME  }}
       DB_HOST : ${{ secrets.DB_HOST  }}
       DB_USERNAME : ${{ secrets.DB_USERNAME  }}
       DB_PASS : ${{ secrets.DB_PASS  }}
       DB_NAME : ${{ secrets.DB_NAME  }}
    
    steps:
      - uses: actions/checkout@v2 
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat >>~/.ssh/config <<END
          Host bastion-host
            hostname ${BASTION_HOSTNAME}
            user ${USER_NAME}
            port 22
            IdentityFile ~/.ssh/private_key
            IdentitiesOnly yes
            StrictHostKeyChecking no
          Host webapp
            hostname ${HOSTNAME}
            user ${USER_NAME}
            port 22
            IdentityFile ~/.ssh/private_key
            IdentitiesOnly yes
            ProxyJump bastion-host
            StrictHostKeyChecking no
          Host webapp2
            hostname ${HOSTNAME_2}
            user ${USER_NAME}
            port 22
            IdentityFile ~/.ssh/private_key
            IdentitiesOnly yes
            ProxyJump bastion-host
            StrictHostKeyChecking no
          END
        
      - name: Deploy in EC2 host 1
        run: |
          ssh webapp '
          
            cd /home/ubuntu/BezpieczSerw-WebApp &&
            git checkout main &&
            git fetch --all &&
            git reset --hard origin/main &&
            git pull origin main
          '

      #- name: Deploy in EC2 host 2
      #  run: |
      #    ssh webapp2 '
      #    
      #      cd /home/ubuntu/BezpieczSerw-WebApp &&
      #      git checkout main &&
      #      git fetch --all &&
      #      git reset --hard origin/main &&
      #      git pull origin main
      #    '

      - name: Add DB data
        run: |
          ssh webapp '
            export DB_HOST="${{ secrets.DB_HOST }}" &&
            export DB_USERNAME="${{ secrets.DB_USERNAME }}" &&
            export DB_PASS="${{ secrets.DB_PASS }}" &&
            export DB_NAME="${{ secrets.DB_NAME }}" &&
            cd ~/BezpieczSerw-WebApp &&
            echo "DB_ENGINE=mysql" >> .env &&
            echo "DB_HOST=$DB_HOST" >> .env &&
            echo "DB_NAME=$DB_NAME" >> .env &&
            echo "DB_USERNAME=$DB_USERNAME" >> .env &&
            echo "DB_PASS=$DB_PASS" >> .env &&
            echo "DB_PORT=3306" >> .env
           '


      #- name: Add DB data host 2
      #  run: |
      #    ssh webapp2 '
      #      export DB_HOST="${{ secrets.DB_HOST }}" &&
      #      export DB_USERNAME="${{ secrets.DB_USERNAME }}" &&
      #      export DB_PASS="${{ secrets.DB_PASS }}" &&
      #      export DB_NAME="${{ secrets.DB_NAME }}" &&
      #      cd ~/BezpieczSerw-WebApp &&
      #      echo "DB_ENGINE=mysql" >> .env &&
      #      echo "DB_HOST=$DB_HOST" >> .env &&
      #      echo "DB_NAME=$DB_NAME" >> .env &&
      #      echo "DB_USERNAME=$DB_USERNAME" >> .env &&
      #      echo "DB_PASS=$DB_PASS" >> .env &&
      #      echo "DB_PORT=3306" >> .env
      #     '
        
      - name: Docker compose
        run: |
          ssh webapp '
          
            cd ~/BezpieczSerw-WebApp &&
            sudo docker-compose -f docker-compose.yml up -d --build
          '

      #- name: Docker compose host 2
      #  run: |
      #    ssh webapp2 '
      #    
      #      cd ~/BezpieczSerw-WebApp &&
      #      sudo docker-compose -f docker-compose.yml up -d --build
      #    '
